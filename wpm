#!/usr/bin/env python3

import time
import random
import os
import readline
from fuzzywuzzy import fuzz

class WpmStats:
    accuracy = 0.0
    cpm = 0
    wpm = 0
    chars = 0
    words = 0

    def __init__(self, prompt_str, input_str, duration):
        self.accuracy = fuzz.ratio(prompt_str, input_str) / 100
        self.duration = duration
        self.chars = len(input_str)
        self.words = sum(1 if word else 0 for word in input_str.split(" "))
        self.cpm = self.chars / duration * 60
        self.wpm = (self.cpm / 5) * self.accuracy ** 2

    def __str__(self):
        fmt_str = ("%d word%s (%d char%s) in %.2f seconds with"
                   + " %d%% accuracy = %d WPM")
        return fmt_str % (
            self.words,
            "" if self.words == 1 else "s",
            self.chars,
            "" if self.chars == 1 else "s",
            self.duration,
            int(self.accuracy * 100),
            round(self.wpm)
        )

def read_words(word_file, target_chars=70):
    with open(word_file, "r") as f:
        all_words = f.read().split("\n")
        all_words.pop()
    words = []
    length = 0
    while length < target_chars - 1:
        word = random.choice(all_words)
        new_length = length + len(word)
        if new_length == target_chars:
            length = new_length
        elif new_length > target_chars - 4:
            continue
        else:
            length = new_length + 1 
        words.append(word)
    return words

def main():
    words = read_words(os.getenv("HOME") + "/.config/wpm/words.txt")
    prompt = " ".join(words)
    print(prompt)
    start_time = time.time()
    try:
        attempt = input()
    except KeyboardInterrupt:
        print("^C")
        exit(1)
    except EOFError:
        print()
        exit(1)
    duration = time.time() - start_time
    if (attempt):
        print()
    print(WpmStats(prompt, attempt, duration))

if __name__ == "__main__":
    main()
